{"version":3,"sources":["App.js","index.js"],"names":["padTime","time","toString","padStart","App","useState","timeLeft","setTimeLeft","title","setTitle","isRunning","setIsRunning","clearTimerId","useRef","minutes","Math","floor","seconds","resetTimer","clearInterval","current","className","onClick","setInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAGA,SAASA,EAAQC,GACf,OAAOA,EAAKC,WAAWC,SAAS,EAAE,KAGrB,SAASC,IACtB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAA0BF,mBAAS,6BAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAeC,iBAAO,MAEtBC,EAAUd,EAAQe,KAAKC,MAAMV,EAAS,KACtCW,EAAUjB,EAAQM,EAAqB,GAAVQ,GAgBnC,SAASI,IACPP,GAAa,GACbF,EAAS,6BACTU,cAAcP,EAAaQ,SAC3BR,EAAaQ,QAAU,KACvBb,EAAY,IAWd,OACE,sBAAKc,UAAU,MAAf,UACE,6BAAKb,IAEL,sBAAKa,UAAU,QAAf,UACE,+BAAOP,IACP,qCACA,+BAAOG,OAGT,sBAAKI,UAAU,UAAf,UACGX,EAA0D,KAA9C,wBAAQY,QAzC3B,WACEX,GAAa,GACgB,OAAzBC,EAAaQ,UAEjBX,EAAS,uBACTG,EAAaQ,QAAUG,aAAY,WAChChB,GAAY,SAACD,GACZ,OAAIA,GAAY,EAAUA,EAAW,GACrCY,IACO,QAET,OA8Be,mBACZR,EAAY,wBAAQY,QApB3B,WACEX,GAAa,GACe,OAAzBC,EAAaQ,UAChBD,cAAcP,EAAaQ,SAC3BX,EAAS,eACTG,EAAaQ,QAAU,OAeN,kBAA4C,KACxDV,EAAY,wBAAQY,QAASJ,EAAjB,mBAA8C,WCvDnEM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.43864b95.chunk.js","sourcesContent":["import React, {useState, useRef} from 'react';\nimport './App.css';\n\nfunction padTime(time){\n  return time.toString().padStart(2,'0')\n}\n\nexport default function App() {\n  const [timeLeft, setTimeLeft] = useState(10)\n  const [title, setTitle] = useState('Let the countdown begin!!')\n  const [isRunning, setIsRunning] = useState(false)\n\n  const clearTimerId = useRef(null)\n  \n  const minutes = padTime(Math.floor(timeLeft/60))\n  const seconds = padTime(timeLeft - minutes * 60)\n  \n  function startTimer(){\n    setIsRunning(true)\n    if (clearTimerId.current !== null) return \n\n    setTitle(`You're doing great!`)\n    clearTimerId.current = setInterval(() => {\n       setTimeLeft((timeLeft) => {\n        if (timeLeft >= 1) return timeLeft - 1\n        resetTimer()\n        return 0\n        })\n    },1000)\n  } \n \n  function resetTimer(){\n    setIsRunning(false)\n    setTitle('Let the countdown begin!!')\n    clearInterval(clearTimerId.current) // stopping the timer\n    clearTimerId.current = null\n    setTimeLeft(10)\n  }\n \n  function stopTimer(){\n    setIsRunning(false)\n    if(clearTimerId.current === null) return \n    clearInterval(clearTimerId.current)\n    setTitle('keep it up!')\n    clearTimerId.current = null\n  }\n\n  return (\n    <div className=\"app\">\n      <h2>{title}</h2>\n\n      <div className=\"timer\">\n        <span>{minutes}</span>\n        <span>:</span>\n        <span>{seconds}</span>\n      </div>\n\n      <div className=\"buttons\">\n       {!isRunning ? <button onClick={startTimer}>Start</button> : null}\n        {isRunning ? <button onClick={stopTimer}>Stop</button> : null}\n        {isRunning ? <button onClick={resetTimer}>Reset</button> : null}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}